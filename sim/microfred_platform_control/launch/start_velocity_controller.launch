<launch>
  <arg name="model_name" default="microfred_platform" />
  <arg name="uuv_name" default="$(arg model_name)"/>


  <include file="$(find microfred_platform_control)/launch/start_thruster_manager.launch">
    <arg name="uuv_name" value="$(arg uuv_name)" />
    <arg name="model_name" value="$(arg model_name)" />
  </include>
 <!--Velocity Control (velocity_control) & Acceleration Control (Acceleration_control)-->
  <group ns="$(arg uuv_name)">

    <rosparam file="$(find microfred_platform_control)/config/vel_pid_control.yaml" command="load"/>
    <rosparam file="$(find microfred_platform_control)/config/inertial.yaml" command="load"/>

    <node pkg="uuv_control_cascaded_pid" type="AccelerationControl.py" name="acceleration_control"
          output="screen">
      <param name="tf_prefix" type="string" value="$(arg uuv_name)/" />
    </node>

    <node pkg="uuv_control_cascaded_pid" type="VelocityControl.py" name="velocity_controllll"
        output="screen">
      <remap from="odom" to="/$(arg uuv_name)/pose_gt"/>
      <remap from="cmd_accel" to="/$(arg uuv_name)/cmd_accel"/>
    </node>
  </group>

 <!--Multi-plexer (Twist_mux)-->


  <node pkg="interactive_marker_twist_server" type="marker_server" name="twist_marker_server" output="screen">
    <param name="link_name" value="base_link" />
  </node>

  <node pkg="twist_mux" type="twist_mux" name="twist_mux">
    <rosparam command="load" file="$(find microfred_platform_control)/config/twist_mux.yaml" />
    <remap from="cmd_vel_out" to="/microfred_velocity_controller/cmd_vel"/>
  </node>


  <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher" />


  
</launch>
